{"version":3,"file":"static/js/30.64b1626d.chunk.js","mappings":"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","sources":["components/Unread News/UnReadNews.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, CardActions, Button, Typography, CardMedia, Link } from \"@mui/material\"\r\nimport { useMediaQuery } from '@mui/material';\r\nimport ThumbUpOutlinedIcon from '@mui/icons-material/ThumbUpOutlined';\r\nimport ThumbDownOutlinedIcon from '@mui/icons-material/ThumbDownOutlined';\r\nimport MoreVertOutlinedIcon from '@mui/icons-material/MoreVertOutlined';\r\nimport TextsmsOutlinedIcon from '@mui/icons-material/TextsmsOutlined';\r\nimport SendSharpIcon from '@mui/icons-material/SendSharp';\r\nimport LoadingImage from \"../assets/loading.gif\"\r\n\r\nconst UnReadNews = () => {\r\n    const [articles, setArticles] = useState([]);\r\n    const isDesktop = useMediaQuery('(min-width:600px)'); // Check if the device is desktop\r\n\r\n    useEffect(() => {\r\n\r\n        const apiKey = 'f900a61243ef4a0180b53e753b33e515'; // Replace 'xxx' with your actual API key\r\n        const apiUrl = `https://newsapi.org/v2/top-headlines?q=world&apiKey=${apiKey}`;\r\n\r\n\r\n        axios.get(apiUrl)\r\n            .then((response) => {\r\n                setArticles(response.data.articles);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching news:', error);\r\n            });\r\n    }, []);\r\n\r\n    // const handleLike = (index) => {\r\n    //     // Implement logic to handle liking an article\r\n    // };\r\n\r\n    // const handleDisLike = (index) => {\r\n    //     // Implement logic to handle disliking an article\r\n    // };\r\n\r\n    // const handleComment = (index) => {\r\n    //     // Implement logic to handle commenting on an article\r\n    // };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {isDesktop ? (\r\n                // Desktop view: Show three articles in a row\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', marginLeft: 55, marginTop: \"25\" }} className='card-container'>\r\n                    {articles.map((article) => (\r\n                        <Card key={article.title} style={{ width: '30%', margin: '10px' }}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"240\"\r\n                                image={article.urlToImage || LoadingImage}\r\n                                title={article.title}\r\n                                alt=\"No Image\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"div\">\r\n                                    {article.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    {article.description}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                {/* <Button size='small' title='Like' onClick={() => handleLike(index)}><ThumbUpOutlinedIcon /> {...article.like}</Button>\r\n                <Button size='small' title='DisLike' onClick={() => handleDisLike(index)}><ThumbDownOutlinedIcon {...article.dislike} /></Button>\r\n                <Button size='small' title='Comment' onClick={() => handleComment(index)}><TextsmsOutlinedIcon {...article.comment} /></Button> */}\r\n                                <Button size='small' title='Like' ><ThumbUpOutlinedIcon /> {article.like}</Button>\r\n                                <Button size='small' title='DisLike' ><ThumbDownOutlinedIcon {...article.dislike} /></Button>\r\n                                <Button size='small' title='Comment'><TextsmsOutlinedIcon {...article.comment} /></Button>\r\n                                <Button size=\"small\">\r\n                                    <Link href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        Learn More\r\n                                    </Link>\r\n                                </Button>\r\n                                <Button size=\"small\" title='Menu'><MoreVertOutlinedIcon /></Button>\r\n                                <Button size=\"small\" title='Share'><SendSharpIcon /> </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                // Mobile view: Show only one article per row\r\n                <div>\r\n                    {articles.map((article) => (\r\n                        <Card key={article.title} style={{ margin: '10px' }}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"240\"\r\n                                image={article.urlToImage || LoadingImage}\r\n                                title={article.title}\r\n                                alt=\"No Image\"\r\n                                onError={(e) => { e.target.onerror = null; e.target.src = LoadingImage }}\r\n                            />\r\n\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"div\">\r\n                                    {article.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    {article.description}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                {/* <Button size='small' title='Like' onClick={() => handleLike(index)}><ThumbUpOutlinedIcon /> {...article.like}</Button>\r\n                <Button size='small' title='DisLike' onClick={() => handleDisLike(index)}><ThumbDownOutlinedIcon {...article.dislike} /></Button>\r\n                <Button size='small' title='Comment' onClick={() => handleComment(index)}><TextsmsOutlinedIcon {...article.comment} /></Button> */}\r\n                                <Button size='small' title='Like' ><ThumbUpOutlinedIcon /> {article.like}</Button>\r\n                                <Button size='small' title='DisLike' ><ThumbDownOutlinedIcon {...article.dislike} /></Button>\r\n                                <Button size='small' title='Comment'><TextsmsOutlinedIcon {...article.comment} /></Button>\r\n                                <Button size=\"small\">\r\n                                    <Link href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        Learn More\r\n                                    </Link>\r\n                                </Button>\r\n                                <Button size=\"small\" title='Menu'><MoreVertOutlinedIcon /></Button>\r\n                                <Button size=\"small\" title='Share'><SendSharpIcon /> </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UnReadNews;\r\n"],"names":["UnReadNews","articles","setArticles","useState","isDesktop","useMediaQuery","useEffect","apiUrl","concat","axios","get","then","response","data","catch","error","console","_jsx","children","style","display","flexWrap","marginLeft","marginTop","className","map","article","_jsxs","Card","width","margin","CardMedia","component","height","image","urlToImage","LoadingImage","title","alt","CardContent","Typography","variant","color","description","CardActions","Button","size","ThumbUpOutlinedIcon","like","ThumbDownOutlinedIcon","dislike","TextsmsOutlinedIcon","comment","Link","href","url","target","rel","MoreVertOutlinedIcon","SendSharpIcon","onError","e","onerror","src"],"sourceRoot":""}